<?php
/*
 * Implementation of hook_nodeapi().
 */
 
function zz_gen_alter_preprocess_page(&$variables, $hook) {
	// Remove EDIT tab .. For non admin 
	if (arg(1)==921) _removetab('Edit', $variables);
	if (arg(1)==921)  _removetab('Table', $variables);
}

function zz_alias_alter_language_selection() {

  // This is more or less a copy&paste from locale_block in locale.module
  $path = drupal_is_front_page() ? '<front>' : $_GET['q'];
  /*list($p,$q) = explode('?',$_SERVER['REQUEST_URI']);
  $path = $path.'?'.urldecode($q);*/
  
  $languages = language_list('enabled');
  $links = array();
  foreach ($languages[1] as $language) {
    $links[$language->language] = array(
      'href'       => $path,
      'title'      => $language->native,
      'language'   => $language,
      'attributes' => array(
        'id'    => "menu_switcher_".$language->language,
        'lang'  => $language->language,
        'class'  => $language->language,
        'title' => t('Watch this page in @language.', array('@language' => $language->native), $language->language),
      ),
    );
  }
   // For forum df avignon we will the french in first position
	$links = array_reverse($links);
  // This adds the real paths, i.e. if we are on a german page, the british flag
  // will point to "en/english_alias" instead of "en/node_with_german_content".
  drupal_alter('translation_link', $links, $path);

  // Remove the current language again. We cannot do that earlier because
  // i18n_translation_link_alter would add it again, thinking it was an extendeg
  // language because it was not yet contained in $links. If you don't use
  // i18n_translation_link_alter, you can also make a case distinction in the
  // foreach loop.
 // unset($links[i18n_get_lang()]);

  // Draw the language selection links.
  return '<div id="language_switcher">'. theme('links', $links, array("class"=>"lg"))."</div>";
}
function zz_gen_alter_taxonomy_form(&$vocabulary) {
print_r(&$vocabulary);
  return $form;
}
function zz_gen_alter_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  global $user;  

	switch ($op) {

		case 'load':     
		if(isset($node->webform)) {  
			if (arg(2)=='edit') break;

				if(isset($node->webform["components"])) {
		         	 foreach($node->webform["components"] as $compid => $compvalue) {
		
						if($node->webform["components"][$compid]["type"] == "select") { 
			
							   $options = _webform_select_options($node->webform["components"][$compid]["extra"]["items"]);
		
							   $optionsStr = "";
								foreach($options as $key => $val) {
									 $option_t = t($val);
					                // Merge the options and question after translate
					                $optionsStr .= ($optionsStr=="") ? ($key . "|" . $option_t) : ("\n" . $key . "|" . $option_t);
								}
								$node->webform["components"][$compid]["extra"]["items"] = $optionsStr;
						}
				}
			}
        $node->title = t($node->title);
		}
		break;
		case 'presave':   
			if ($node->type == 'diapo') {
				foreach(element_children($node->field_diapo_img) as $key){
	        		if ($node->field_diapo_img[$key][data][alt]) {
	        			$node->field_diapo_img[$key][data][alt]=$_POST[field_diapo_img][$key][data]["alt"];
	        		}
				}
	       	}  
       break;
	}
}

function _removetab($label, &$vars) {
  $tabs = explode("\n", $vars['tabs']);
  $vars['tabs'] = '';

  foreach($tabs as $tab) {
    if(strpos($tab, '>' . $label . '<') === FALSE) {
      $vars['tabs'] .= $tab . "\n";
    }
  }
}

function  zz_gen_alter_form_alter( &$form , $form_state, $form_id) {

	if($form_id == 'diapo_node_form'){
		$form['#after_build'][] = 'zz_gen_alter_node_form_after_build';
	}
	if($form_id == 'webform_client_form_921'){
		$arg0=arg(0);$arg2=arg(2);
   		if ($arg2=="submission" ) {
   			if ($form['submission_info'][submitted]['#value'])  $form['submission_info'][submitted]['#value'] =  t('Submitted by') . " ". $form[submission]["#value"]->data[3][value][0] ." ".$form[submission]["#value"]->data[2][value][0];
   		} 
	}
}

function zz_gen_alter_node_form_after_build($form, &$form_state) {
 foreach (element_children($form['field_diapo_img']) as $key) {
 		  	$form['field_diapo_img'][$key]['data']['alt']['#type']="textarea";
	  		$form['field_diapo_img'][$key]['data']['alt']['#maxlength']=5000;
	  		$form['field_diapo_img'][$key]['data']['alt']['#description']="Entrez une description pour cette image";
	  		$form['field_diapo_img'][$key]['data']['alt']['#title']="Description";
	  		$alt=$form['field_diapo_img'][$key]['data']['alt'];
	  		$title=$form['field_diapo_img'][$key]['data']['title'];
	  		unset($form['field_diapo_img'][$key]['data']['alt']);
	  		unset($form['field_diapo_img'][$key]['data']['title']);
	  		$form['field_diapo_img'][$key]['data'] += array('title'=>$title,'alt'=>$alt);
 }
 return $form;
}